---
/**
 * ThemeConfig.astro
 *
 * Define default themes for specific pages in your comic.
 *
 * HOW IT WORKS:
 * - Each page can have a default theme assigned based on chapter ID and page number
 * - If overrule is TRUE: the page theme is ALWAYS used, ignoring user preferences
 * - If overrule is FALSE: user preferences override the default theme
 * - If user selects "Default" in options: page-specific themes are used
 * - If user selects "Space" in options: space theme is always used (no colors)
 * - If user selects any other theme: that theme overrides defaults (unless overrule is true)
 * - originalTheme: Specify what theme to transition FROM (optional, for theme-to-theme transitions)
 *
 * AVAILABLE THEMES:
 * space, breath, light, time, heart, mind, hope, rage, life, doom, blood, void
 *
 * TRANSITION OPTIONS:
 * - 'smooth' (default): 2-second smooth ease-in-out transition
 * - 'instant': No transition, immediate theme change
 * - 'fast': 0.5-second quick transition
 * - 'slow': 4-second slow transition
 * - 'fade': 2-second fade with slight opacity change
 *
 * USAGE EXAMPLES:
 *
 * 1. Set a theme for a specific page (can be overridden by user):
 *    if (chapterId === 1 && pageNumber === 5) return { theme: 'breath', overrule: false };
 *
 * 2. Set a theme that CANNOT be overridden by user preferences:
 *    if (chapterId === 2 && pageNumber === 10) return { theme: 'time', overrule: true };
 *
 * 3. Set a theme with instant transition (no animation):
 *    if (chapterId === 2 && pageNumber === 15) return { theme: 'rage', transition: 'instant' };
 *
 * 4. Set a theme with slow transition for dramatic effect:
 *    if (chapterId === 3 && pageNumber === 1) return { theme: 'void', transition: 'slow', overrule: true };
 *
 * 5. Transition from one specific theme to another (theme-to-theme transition):
 *    if (chapterId === 1 && pageNumber === 7) return { originalTheme: 'time', theme: 'space', transition: 'slow', overrule: false };
 *
 * 6. Set a theme for a range of pages:
 *    if (chapterId === 2 && pageNumber >= 10 && pageNumber <= 20) {
 *      return { theme: 'mind', overrule: false };
 *    }
 *
 * 7. Force a theme for story-critical moments:
 *    if (chapterId === 3 && pageNumber === 1) {
 *      return { theme: 'rage', overrule: true };  // Always rage, no matter what
 *    }
 *
 * 8. Use shorthand (defaults to overrule: false, transition: 'smooth'):
 *    if (chapterId === 4 && pageNumber === 5) return { theme: 'hope' };
 *
 * ADDITIONAL EXAMPLES (showing originalTheme usage):
 *  - Theme-to-theme transition on a page (transition from one named theme to another):
 *    if (chapterId === 1 && pageNumber === 7) return { originalTheme: 'time', theme: 'space', transition: 'slow', overrule: false };
 *
 *  - Use originalTheme when you want a very specific visual transition:
 *    if (chapterId === 2 && pageNumber === 25) return { originalTheme: 'hope', theme: 'rage', transition: 'fast' };
 */

export interface ThemeConfig {
  theme: string;
  originalTheme?: string;  // Optional: specify what theme to transition FROM
  overrule?: boolean;  // If true, ignores user preferences
  transition?: 'smooth' | 'instant' | 'fast' | 'slow' | 'fade';  // Transition animation type
}

/**
 * Get the default theme configuration for a specific chapter and page.
 * Returns null if no default theme is defined for that page.
 *
 * EDIT THIS FUNCTION to define your page-specific themes!
 */
export function getDefaultTheme(chapterId: number, pageNumber: number): ThemeConfig | null {
  // ========================================
  // DEFINE YOUR THEMES BELOW THIS LINE
  // ========================================

  // Example: Chapter 1 themes (can be overridden by user)
  if (chapterId === 1) {
    if (pageNumber === 1) return { theme: 'time', transition: 'fast', overrule: false };
    if (pageNumber === 2) return { theme: 'time', transition: 'instant', overrule: false };
    if (pageNumber === 3) return { theme: 'time', transition: 'instant', overrule: false };
    if (pageNumber === 4) return { theme: 'time', transition: 'instant', overrule: false };
    if (pageNumber === 5) return { theme: 'time', transition: 'instant', overrule: false };
    if (pageNumber === 6) return { theme: 'time', transition: 'instant', overrule: false };
    // Example of theme-to-theme transition: from 'time' to 'space' with slow transition
    if (pageNumber === 7) return { originalTheme: 'time', theme: 'space', transition: 'fast', overrule: false };
    if (pageNumber === 8) return { theme: 'space', transition: 'instant', overrule: false };
    if (pageNumber === 9) return { theme: 'space', transition: 'instant', overrule: false };
    if (pageNumber === 10) return { theme: 'space', transition: 'instant', overrule: false };
    if (pageNumber === 11) return { theme: 'space', transition: 'instant', overrule: false };
    if (pageNumber === 12) return { theme: 'space', transition: 'instant', overrule: false };
    if (pageNumber === 13) return { theme: 'space', transition: 'slow', overrule: false };
  }

  // Add your own chapter/page combinations below:
  //
  // Examples with transitions:
  // if (chapterId === 2) {
  //   // Instant transition (no animation) - good for sudden reveals
  //   if (pageNumber === 1) return { theme: 'rage', transition: 'instant' };
  //
  //   // Fast transition (0.5s) - good for quick mood changes
  //   if (pageNumber === 5) return { theme: 'heart', transition: 'fast' };
  //
  //   // Slow transition (4s) - good for dramatic moments
  //   if (pageNumber === 10) return { theme: 'void', transition: 'slow', overrule: true };
  //
  //   // Fade transition (2s with opacity) - good for dream sequences
  //   if (pageNumber === 15) return { theme: 'hope', transition: 'fade' };
  //
  //   // Default smooth transition (2s) - most common
  //   if (pageNumber === 20) return { theme: 'time', transition: 'smooth' };
  //
  //   // Theme-to-theme transition: from 'hope' to 'rage' with fast transition
  //   if (pageNumber === 25) return { originalTheme: 'hope', theme: 'rage', transition: 'fast' };
  // }
  //
  // if (chapterId === X) {
  //   if (pageNumber === Y) return { theme: 'theme-name', overrule: false };
  //   if (pageNumber === Z) return { theme: 'theme-name', overrule: true };
  // }

  // ========================================
  // DEFINE YOUR THEMES ABOVE THIS LINE
  // ========================================

  // Return null to use 'space' as default (or user preference if set)
  return null;
}

/**
 * Check if a page has a default theme defined.
 * You typically don't need to edit this function.
 */
export function hasDefaultTheme(chapterId: number, pageNumber: number): boolean {
  return getDefaultTheme(chapterId, pageNumber) !== null;
}

/**
 * Check if a page's theme should overrule user preferences.
 * You typically don't need to edit this function.
 */
export function shouldOverruleUserPreference(chapterId: number, pageNumber: number): boolean {
  const config = getDefaultTheme(chapterId, pageNumber);
  return config?.overrule === true;
}

/**
 * Get the transition type for a specific page.
 * Returns 'smooth' by default if not specified.
 * You typically don't need to edit this function.
 */
export function getTransitionType(chapterId: number, pageNumber: number): string {
  const config = getDefaultTheme(chapterId, pageNumber);
  return config?.transition || 'smooth';
}
---
